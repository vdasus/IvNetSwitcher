<mah:MetroWindow x:Class="IvNetSwitcher.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:IvNetSwitcher.UI"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:wpf="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
        mc:Ignorable="d"
                      GlowBrush="DarkSlateGray"
                      WindowTransitionsEnabled="True"
                      UseLayoutRounding ="True"
                      MinWidth="700"
                      MinHeight="480"
                      Width="700"
                      Height="480"
                      Title="{Binding Caption, Mode=OneTime}"
                      DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Command="{Binding Path=DataContext.RegisterCommand, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit_add}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Register Network" />
                </StackPanel>
            </Button>
            <Button Command="{Binding Path=DataContext.SettingsCommand, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_settings}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Settings" />
                </StackPanel>
            </Button>
            <Button Command="{Binding Path=DataContext.HelpCommand, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_book_perspective_help}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Help" />
                </StackPanel>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <DockPanel LastChildFill="True">
        <tb:TaskbarIcon x:Name="NotifyIcon"
                        IconSource="{StaticResource AppIcon}"
                        Visibility="Visible"
                        ToolTipText="{Binding Caption, Mode=OneTime}"
                        MenuActivation="RightClick"
                        PopupActivation="LeftClick"
                        DoubleClickCommand="{Binding MinMaxCommand}" >
            <tb:TaskbarIcon.TrayPopup>
                <Border Background="White"
                            BorderBrush="Orange"
                            BorderThickness="2"
                            CornerRadius="0"
                            Width="750"
                            Height="Auto">
                </Border>
            </tb:TaskbarIcon.TrayPopup>
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu Background="BlanchedAlmond">
                    <MenuItem Header="Exit" Click="MenuItem_OnClick" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Margin="15px 0 0 0">
                <wpf:LoadingIndicator Margin="4" VerticalAlignment="Top" Visibility="{Binding IsBusy, Mode=OneWay, Converter={StaticResource BoolToVis}}" IsActive="{Binding IsBusy}" Foreground="OrangeRed" Style="{DynamicResource LoadingIndicatorArcsStyleKey}" />
            </StatusBarItem>
            <StatusBarItem Margin="15px 0 0 0">
                <Label Content="{Binding StatusText}" />
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ToolBarTray Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"  Orientation="Horizontal">
                <ToolBar OverflowMode="Never" Background="Transparent">
                    <Button Width="48" Height="48" Command="{Binding GoPlayCommand, Mode=OneTime}" ToolTip="Start monitoring">
                        <Image Source="{DynamicResource PlayPicture}" />
                    </Button>
                    <Button Width="48" Height="48" Command="{Binding GoNextCommand, Mode=OneTime}" ToolTip="Connect to next network">
                        <Image Source="{DynamicResource NexPlayPicture}" />
                    </Button>
                    <Separator/>
                    <Button Width="48" Height="48" Command="{Binding EditProfileCommand, Mode=OneTime}" ToolTip="Edit profile">
                        <Image Source="{DynamicResource EditPicture}" />
                    </Button>
                    <Button Width="48" Height="48" Command="{Binding DeleteProfileCommand, Mode=OneTime}" ToolTip="Delete profile">
                        <Image Source="{DynamicResource DeletePicture}" />
                    </Button>
                </ToolBar>
            </ToolBarTray>
            <WrapPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" >
                <ListBox  BorderThickness="0" Margin="10" ItemsSource="{Binding RegisteredNets.Items}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <mah:Tile Title="{Binding Name, Mode=OneTime }" 
                                                   Width="200"
                                                   Height="100" 
                                                   Count="{Binding Active}"
                                                   KeepDragging="True" 
                                                   VerticalTitleAlignment="Top">
                                <!--<mah:Tile.Background>
                                    <ImageBrush ImageSource="Images/windesktop.jpg" />
                                </mah:Tile.Background>-->
                            </mah:Tile>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </WrapPanel>
        </Grid>
        <!--<ScrollViewer PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"></ScrollViewer>-->
    </DockPanel>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout Header="Register" Position="Right" Width="400" Theme="Inverse" IsOpen="{Binding IsRegisterOpened}" CloseButtonIsCancel="True">
                <StackPanel Margin="8">
                    <WrapPanel HorizontalAlignment="Left">
                        <wpf:LoadingIndicator Margin="4" VerticalAlignment="Top" Visibility="{Binding IsBusy, Mode=OneWay, Converter={StaticResource BoolToVis}}" IsActive="{Binding IsBusy}" Foreground="OrangeRed" Style="{DynamicResource LoadingIndicatorArcsStyleKey}" />
                        <mah:SplitButton  Margin="8" 
                                               Icon="{DynamicResource appbar_network}"
                                               HorizontalContentAlignment="Left"
                                               HorizontalAlignment="Center"
                                               VerticalContentAlignment="Center"
                                               Width="Auto"
                                               SelectedIndex="0"
                                               ItemsSource="{Binding AvailableNets}"
                                               DisplayMemberPath="Name"
                                               FontSize="16"
                                               VerticalAlignment="Center" />
                    </WrapPanel>
                    <TextBox Margin="8" mah:TextBoxHelper.Watermark="User name" mah:TextBoxHelper.ClearTextButton="True" Text=""/>
                    <PasswordBox mah:PasswordBoxHelper.CapsLockWarningToolTip="Caps lock ON" Margin="8" mah:TextBoxHelper.Watermark="Password" 
                                 mah:TextBoxHelper.ClearTextButton="True"
                                 Password="">
                    </PasswordBox>
                    <CheckBox x:Name="CbPreferred" Margin="8">Preferred</CheckBox>
                    <mah:NumericUpDown Minimum="0" Maximum="3600" Interval="1" StringFormat="G0"
                                            mah:TextBoxHelper.Watermark="Re check interval in minutes"
                                            Speedup="True"
                                            Visibility="{Binding IsChecked,ElementName=CbPreferred,Converter={StaticResource BoolToVis}}"/>
                    <Button Margin="8" HorizontalAlignment="Right" Width="100">Save</Button>
                </StackPanel>
            </mah:Flyout>
            <mah:Flyout Header="Settings" Position="Right" Width="400" Theme="Inverse" IsOpen="{Binding IsSettingsOpened}" CloseButtonIsCancel="True">
                <!-- Your custom content here -->
            </mah:Flyout>
            <mah:Flyout Header="Help" Position="Right" Width="400" Theme="Inverse" IsOpen="{Binding IsHelpOpened}" CloseButtonIsCancel="True">
                <!-- Your custom content here -->
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
</mah:MetroWindow>